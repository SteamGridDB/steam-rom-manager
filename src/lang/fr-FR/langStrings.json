{
  "preview": {
    "component": {
      "filter": "Search for game",
      "selectType": "Artwork Type",
      "selectCategories": "Steam Category",
      "selectParsers": "Parser Title",
      "selectTypeOptions": {
        "long": "Bannières",
        "tall": "Posters",
        "hero": "Arrière-plans",
        "icon": "Icônes",
        "logo": "Logos",
        "games": "Tous les Artwork"
      },
      "by": "par",
      "refreshImages": "Actualiser l'image",
      "saveImage": "Save image to file",
      "addLocalImages": "Add local images",
      "retryDownload": "Réessayer le téléchargement",
      "generateAppList": "Generate app list",
      "saveAppList": "Enregistrer les applications sur Steam",
      "removeAppList": "Supprimer les applications de Steam",
      "remainingImages": "Nombre de téléchargements restant:",
      "stopUrlRetrieving": "Arrêter tous les téléchargements",
      "exportSelections": "Export image choices",
      "importSelections": "Import image choices"
    },
    "service": {
      "info": {
        "listIsBeingGenerated": "List is being generated. Please wait.",
        "listIsBeingSaved": "List is being saved. Please wait.",
        "listIsBeingRemoved": "List is being removed. Please wait.",
        "listIsEmpty": "Liste vide.",
        "populatingVDF_List": "Populating VDF list.",
        "creatingBackups": "Creating backups.",
        "readingVDF_Files": "Reading VDF files.",
        "mergingVDF_entries": "Merging VDF entries.",
        "removingVDF_entries": "Removing VDF entries and image files.",
        "savingCategories": "Saving added category information to localconfig.vdf",
        "removingFromCategories": "Removing all added category information",
        "writingVDF_entries": "Writing VDF files and saving/removing images.",
        "updatingKnownSteamDirList": "Updating a list of known Steam directories.",
        "retryingDownload__i": "Retrying image download from \"${imageUrl}\" for \"${appTitle}\".",
        "disabledConfigurations__i": "${count} user configuration(s) was/were skipped (disabled by user).",
        "invalidConfigurations__i": "${count} user configuration(s) was/were skipped (invalid).",
        "executingParsers": "Executing parsers.",
        "shutdownSteam": "Please shutdown Steam if it is running.",
        "noParserConfigurations": "Please create parser configuration in \"Parsers\" menu first.",
        "parserFoundNoFiles": "Parser(s) found no files matching user configuration.",
        "allImagesRetrieved": "All available image urls retrieved.",
        "providerTimeout__i": "Timeout was requested by \"${provider}\" for ${time} second(s).",
        "noAccountsWarning": "User accounts not found. Incorrect Steam directory?",
        "preparingExport": "Preparing export of image choices.",
        "exportProgress__i": "Saving image choices ${progress}.",
        "readingSelections": "Applying imported image choices."
      },
      "errors": {
        "fatalError": "Fatal error occurred in Preview. See event log for details.",
        "fatalError__i": "Fatal Preview Error ${error}",
        "knownSteamDirListIsEmpty": "A list of known Steam directories is empty.",
        "steamIsRunning": "Cannot make changes while steam is running!",
        "categorySaveError": "Error updating categories. See event log for details.",
        "categorySaveError__i": "Category error (shortcuts and artwork will still be added): ${error}",
        "controllerSaveError": "Error updating controller templates. See event log for details.",
        "controllerSaveError__i": "Controller error (shortcuts and artwork will still be added): ${error}",
        "retryingDownload__i": "Image download from \"${imageUrl}\" failed for \"${appTitle}\".",
        "providerError__i": "Error received from \"${provider}\" for \"${title}\":\n (${url ? `${code}: ${url}` : code}).",
        "unknownProviderError__i": "Error received from \"${provider}\" for \"${title}\":\n ${error}",
        "exportError__i": "Could not save selections package folder: ${error}",
        "importJSONFailError__i": "Could not import selections, JSON was malformed: ${error}",
        "importFailError__i": "Could not import image choices: ${error}"
      },
      "success": {
        "writingVDF_entries": "Done adding/removing entries.",
        "removingVDF_entries": "Entries have been removed.",
        "exportSuccess__i": "Image choices folder successfully saved to \"${path}\"!",
        "importSelectionsSuccess__i": "Successfully imported ${count} image choices!"
      }
    }
  },
  "steamParser": {
    "errors": {
      "directoryInvalid": "> Répertoire Steam invalide.",
      "noSteamAccounts": "> Le répertoire Steam spécifié n'a aucun compte.",
      "steamChanged__i": "> Steam a modifié la structure de la base de données interne ou l'analyseur a essayé de lire une base de données obsolète.\nFichier problématique: ${file}\nErreur complète:\n ${error}",
      "fatalError__i": "> L'analyseur Steam a échoué avec une erreur fatale:\n ${error}"
    }
  },
  "manualParser": {
    "manifestsInputTitle": "Manifests Directory",
    "errors": {
      "fatalError__i": "> Manual parser failed with fatal error:\n ${error}"
    }
  },
  "epicParser": {
    "manifestsInputTitle": "Manifests Directory Override",
    "launcherModeInputTitle": "Launch games via Epic for online services",
    "errors": {
      "invalidManifestsOverride": "> Manifests Override is not a valid directory.",
      "epicNotCompatible": "> Epic Games Store not available on Linux.\n If you are using the Legendary store on Linux you need to set Manifests Override.",
      "epicNotInstalled": "> Epic Games ne semble pas être installé.",
      "fatalError__i": "> L'analyseur Epic Games a échoué avec une erreur fatale:\n ${error}"
    }
  },
  "legendaryParser": {
    "legendaryInstalledFileTitle": "Legendary installed.json Path Override",
    "errors": {
      "legendaryNotInstalled": "> Legendary installed.json not found",
      "fatalError__i": "> L'analyseur Legendary a échoué avec une erreur fatale:\n ${error}"
    }
  },
  "uplayParser": {
    "uplayDirTitle": "Uplay Directory Override",
    "launcherModeInputTitle": "Lancer les jeux via UPlay pour les services en ligne",
    "errors": {
      "invalidManifestsOverride": "> Uplay Directory Override is not a valid directory.",
      "uplayNotCompatible": "> L'analyseur UPlay n'est pas disponible sur Linux ou Mac.",
      "uplayDirNotFound": "> Le répertoire UPlay spécifié n'existe pas.",
      "uplayNotInstalled": "> UPlay n'est pas installé dans le répertoire spécifié.",
      "fatalError__i": "> L'analyseur UPlay a échoué avec une erreur fatale:\n ${error}"
    }
  },
  "gogParser": {
    "galaxyExeOverrideTitle": "Galaxy Path Override",
    "launcherModeInputTitle": "Lancer les jeux via GOG Galaxy",
    "errors": {
      "invalidGalaxyExeOverride": "> Galaxy Client Override is not a valid path.",
      "fatalError__i": "> L'analyseur GOG Galaxy a échoué avec une erreur fatale:\n ${error}",
      "gogNotCompatible": "> L'analyseur GOG Galaxy n'est actuellement disponible que sous Windows.",
      "gogNotInstalled": "> GOG Galaxy ne semble pas être installé."
    }
  },
  "amazonGamesParser": {
    "exeOverrideTitle": "Amazon Games Path Override",
    "launcherModeInputTitle": "Lancer les jeux via Amazon Games",
    "errors": {
      "invalidExeOverride": "> Amazon Games Installation Override is not a valid directory.",
      "osUnsupported": "> L'analyseur Amazon Games a échoué car Amazon Games n'est disponible que sur windows.",
      "databaseNotFound": "> Fichier de base de données Amazon Games introuvable. Amazon Games n'est probablement pas installé.",
      "fatalError__i": "> L'analyseur Amazon Games a échoué avec une erreur fatale:\n ${error}"
    }
  },
  "itchIoParser": {
    "itchIoAppDataOverrideTitle": "itch.io AppData Path Override",
    "itchIoWindowsOnLinuxInstallDriveRedirectTitle": "Windows-on-Linux Install Drive Redirect",
    "errors": {
      "invalidItchIoAppDataOverride": "> itch.io AppData Override is not a valid directory.",
      "invalidItchIoWindowsOnLinuxInstallDriveRedirect": "> itch.io Windows-on-Linux Install Drive Redirect is not a valid directory.",
      "osUnsupported": "> itch.io parser failed because the parser only supports macos, linux, and windows currently.",
      "fatalError__i": "> itch.io parser failed with fatal error:\n ${error}",
      "databaseNotFound": "> itch.io database file not found. Itch is most likely not installed."
    }
  },
  "eaDesktopParser": {
    "eaGamesDirTitle": "EA Games Install Directory",
    "errors": {
      "fatalError__i": "> EA Desktop parser failed with fatal error:\n ${error}",
      "invalidXML__i": "> Invalid XML file ${dataFile}"
    }
  },
  "globParser": {
    "inputTitle": "User's glob",
    "errors": {
      "noTitle__md": "> File glob must contain `${title}`!",
      "moreThanOneTitle__md": "> File glob must contain only one `${title}`!",
      "noStarNextToTitle__md": "> Star `*` can not be next to `${title}`!",
      "noAnyCharNextToTitle__md": "> Any char `?` can not be next to `${title}`!",
      "noWindowsSlash__md": "> Windows directory character `\\` is not allowed! Use `/` instead.",
      "noGlobstarOnBothSides__md": "> Globstar `**` can only be on one side of `${title}`!",
      "noBracedDirSetOnBothSides__md": "> A braced set, containing at least one slash `/` can only be on one side of `${title}`!",
      "noBracedDirSetOrGlobstarOnBothSides__md": "> A braced set, containing at least one slash `/` and a globstar `**` can only be on one side of `${title}`!",
      "noEmptyPattern__md": "> Pattern can not be empty!",
      "noEmptyCharRange__md": "> Character range can not be empty!",
      "noStarInPatternNextToTitle__md": "> Star `*`, inside a pattern, can not be next to `${title}`!",
      "noAnyCharInPatternNextToTitle__md": "> Any char `?`, inside a pattern, can not be next to `${title}`!"
    }
  },
  "globRegexParser": {
    "inputTitle": "User's glob-regex",
    "errors": {
      "noRegex__md": "> File glob must contain `${regex}` where **regex** is your regular expression!",
      "moreThanOneRegex__md": "> File glob must contain only one `${regex}`!",
      "noStarNextToRegex__md": "> Star `*` can not be next to `${regex}`!",
      "noAnyCharNextToRegex__md": "> Any char `?` can not be next to `${regex}`!",
      "noWindowsSlash__md": "> Windows directory character `\\` is not allowed! Use `/` instead.",
      "noGlobstarOnBothSides__md": "> Globstar `**` can only be on one side of `${regex}`!",
      "noBracedDirSetOnBothSides__md": "> A braced set, containing at least one slash `/` can only be on one side of `${regex}`!",
      "noBracedDirSetOrGlobstarOnBothSides__md": "> A braced set, containing at least one slash `/` and a globstar `**` can only be on one side of `${regex}`!",
      "noEmptyPattern__md": "> Pattern can not be empty!",
      "noEmptyCharRange__md": "> Character range can not be empty!",
      "noStarInPatternNextToRegex__md": "> Star `*`, inside a pattern, can not be next to `${regex}`!",
      "noAnyCharInPatternNextToRegex__md": "> Any char `?`, inside a pattern, can not be next to `${regex}`!"
    }
  },
  "sgdbProvider": {
    "nsfwInputTitle": "Autoriser les images NSFW",
    "humorInputTitle": "Allow joke artwork",
    "imageMotionTypesTitle": "Allowed animation types",
    "stylesTitle": "Allowed grid styles",
    "stylesHeroTitle": "Allowed hero styles",
    "stylesLogoTitle": "Allowed logo styles",
    "stylesIconTitle": "Allowed icon styles"
  },
  "logger": {
    "component": {
      "noMessages": "No messages are available",
      "error": "ERREUR",
      "info": "INFO",
      "success": "Succès",
      "fuzzy": "FUZZY",
      "textWrap": "TEXT-WRAP",
      "autoscroll": "AUTOSCROLL",
      "clearLog": "Effacer les logs"
    }
  },
  "customVariables": {
    "service": {
      "error": {
        "failedToDownload__i": "Failed to download custom variables file. Status: ${error}.",
        "writingError": "Error occurred while saving custom variables.",
        "loadingError": "Error occurred while loading custom variables.",
        "corruptedVariables__i": "Saved custom variables are invalid!\r\nPermanent variable saving is disabled until this issue is resolved.\r\nTry to manually fix errors yourself (file - ${file})\r\nor seek help on github or our official discord channel: ${error}"
      },
      "info": {
        "downloaded": "Custom variables file has been downloaded."
      }
    }
  },
  "configPresets": {
    "service": {
      "error": {
        "failedToDownload__i": "Failed to download configuration presets file. Status: ${error}.",
        "writingError": "Error occurred while saving configuration presets.",
        "loadingError": "Error occurred while loading configuration presets.",
        "corruptedVariables__i": "Saved configuration presets are invalid!\r\nPermanent file saving is disabled until this issue is resolved.\r\nTry to manually fix errors yourself (file - ${file})\r\nor seek help on github or our official discord channel: ${error}"
      },
      "info": {
        "updatingPresets": "Local config presets are out of date. Updating now.",
        "downloaded": "New config preset file has been downloaded."
      }
    }
  },
  "settings": {
    "component": {
      "label": {
        "general": "Paramètres généraux",
        "imageProviders": "Image provider settings",
        "fuzzy": "Fuzzy matcher settings",
        "environmentVariables": "Environment variable settings",
        "communityPresets": "Community variable/preset settings"
      },
      "text": {
        "offlineMode": "Offline mode",
        "removeApps_desc": "all added app entries and controllers",
        "removeApps_btn": "Remove",
        "preloadImages": "Preload retrieved images immediately",
        "fuzzy_verbose": "Log matching results",
        "fuzzy_filter": "Filter images",
        "enabledProviders": "Enabled providers:",
        "selectLanguage": "Sélectionner la langue:",
        "resetFuzzy_desc": "fuzzy list",
        "resetFuzzyCache_desc": "fuzzy cache",
        "resetFuzzy_btn": "Reset",
        "customVariables_desc": "custom variables",
        "configPresets_desc": "config presets",
        "showSteamImages": "Show current Steam images by default",
        "deleteDisabledShortcuts": "Remove shortcuts for disabled parsers",
        "clearLogOnTest": "Automatically clear log before testing parsers",
        "configDir": "Open Config Directory"
      },
      "placeholder": {
        "noProviders": "None",
        "steamDirectoryWin": "Typically C:\\Program Files (x86)\\Steam",
        "steamDirectoryMac": "Typically ~/Library/Application Support/Steam",
        "steamDirectoryLinux": "Typically /home/user/.steam/steam",
        "romsDirectoryWin": "For example D:\\ROMs",
        "romsDirectoryMac": "For example ~/ROMs",
        "romsDirectoryLinux": "For example ~/ROMs",
        "retroarchPathWin": "For example C:\\Path\\To\\retroarch.exe",
        "retroarchPathLinux": "For example /path/to/retroarch",
        "retroarchPathMac": "For example /path/to/retroarch",
        "raCoresDirectoryWin": "Typically C:\\Users\\UserName\\AppData\\Roaming\\RetroArch\\cores",
        "raCoresDirectoryLinux": "Typically /lib/x86_64-linux-gnu/libretro/cores",
        "raCoresDirectoryMac": "Typically /Applications/Retroarch.app/Contents/Resources/cores",
        "localImagesDirectoryWin": "For example C:\\Path\\To\\LocalArtwork",
        "localImagesDirectoryUnix": "For example ~/path/to/localartwork"
      }
    },
    "service": {
      "info": {
        "updatingSettings": "Updating user settings with new fields."
      },
      "error": {
        "writingError": "Error occurred while saving user settings.",
        "readingError": "Error occurred while reading user settings.",
        "corruptedSettings__i": "Saved app settings are invalid!\r\nPermanent settings saving is disabled until this issue is resolved.\r\nTry to manually fix errors yourself (file - ${file})\r\nor seek help on github or our official discord channel: ${error}"
      }
    }
  },
  "nav": {
    "component": {
      "about": "À propos",
      "preview": "Aperçu",
      "logger": "Event log",
      "settings": "Paramètres",
      "parsers": "Analyseurs",
      "customVariables": "Variables",
      "userExceptions": "Exceptions",
      "noTitle": "Aucun titre!"
    }
  },
  "userExceptions": {
    "component": {
      "buttons": {
        "save": "Enregistrer",
        "deleteAll": "Effacer",
        "undoChanges": "Annuler les changements",
        "addItem": "Ajouter une exception",
        "deleteItem": "Supprimer l'exception"
      },
      "text": {
        "title": "User Exceptions",
        "exclude": "Exclude Title",
        "excludeArtwork": "Local Artwork Only"
      }
    },
    "service": {
      "error": {
        "loadingError": "Could not load user exceptions",
        "corruptedExceptions__i": "User exceptions corrupt (file - ${file}). Saving is disabled, full error is: ${error}",
        "writingError": "Error occurred saving user exceptions"
      }
    }
  },
  "parsers": {
    "component": {
      "buttons": {
        "save": "Enregistrer",
        "copy": "Copier",
        "testParser": "Test parser",
        "delete": "Supprimer",
        "moveUp": "Move up",
        "moveDown": "Move down",
        "faq": "FAQ",
        "undoChanges": "Annuler les changements",
        "undoDelete": "Annuler la suppression",
        "toClipboard": "Copier la configuration dans le presse-papiers"
      },
      "info": {
        "testStarting__i": "Testing \"${title}\" parser (SRM version - ${version} ${portable}).",
        "opSys__i": "Operating system is \"${os}\"",
        "testCompleted": "Test de l'analyseur terminé.",
        "nothingWasFound": "L'analyseur n'a rien trouvé.",
        "copiedToClipboard": "Configuration copiée dans le presse-papiers",
        "userExclusions": "User excluded:",
        "excludedFileInfo__i": "[${index}/${total}]: ${filename}",
        "removingControllers__i": "Removing controller templates for parser: ${configTitle}",
        "fetchingControllerTemplates": "Fetching controller templates"
      },
      "error": {
        "missingAccounts__i": "Following ${count} user account(s) were not found (user must to login to Steam at least once):",
        "missingAccountInfo__i": "  ${name}",
        "noAccountsWarning": "Warning! No user accounts found, it could be due to one of the reasons below:\r\n - incorrect Steam directory;\r\n - no user has ever logged in;\r\n - Steam does not save user credentials (\"Show advanced options -> User accounts -> Use account credentials\").\r\nIf you're seeing this, preview won't be generated for this configuration.",
        "cannotParseUserIDs": "Error parsing user accounts:",
        "failedToMatch": "Failed to match:",
        "failedFileInfo__i": "[${index}/${total}]: ${filename}",
        "testFailed": "Testing failed",
        "cannotTestInvalid": "Can not test invalid configuration!",
        "cannotCopyInvalid": "Can not copy invalid configuration!",
        "failedToCopy": "Failed to copy to clipbard!",
        "cannotFetchTemplates": "Can not fetch controller templates for invalid steam directory!",
        "errorRemovingControllers": "Error removing controllers:",
        "cannotRemoveControllers": "Can not remove controllers from invalid steam directory!"
      },
      "success": {
        "foundAccounts__i": "Found ${count} available user account(s):",
        "foundAccountInfo__i": "  ${name} (steamID64: ${steamID64}, accountID: ${accountID})",
        "steamCategory__i": "[${index}/${total}]:     Steam categories - ${steamCategory}",
        "steamCategoryInfo__i": "[${index}/${total}]:                        ${steamCategory}",
        "appId__i": "[${index}/${total}]:                AppID - ${appid}",
        "shortAppId__i": "[${index}/${total}]:          Short AppID - ${appid}",
        "extractedTitle__i": "[${index}/${total}]:      Extracted title - ${title}",
        "fuzzyTitle__i": "[${index}/${total}]:          Fuzzy title - ${title}",
        "finalTitle__i": "[${index}/${total}]:          Final title - ${title}",
        "filePath__i": "[${index}/${total}]:            File path - ${filePath}",
        "startDir__i": "[${index}/${total}]:            Start dir - ${startDir}",
        "completeShortcut__i": "[${index}/${total}]:    Complete shortcut - ${shortcut}",
        "firstImageQuery__i": "[${index}/${total}]:        Image queries - ${query}",
        "imageQueries__i": "[${index}/${total}]:                        ${query}",
        "resolvedDefaultImageGlob__i": "[${index}/${total}]:  Default image glob:",
        "resolvedDefaultImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "resolvedDefaultTallImageGlob__i": "[${index}/${total}]:  Default tall image glob:",
        "resolvedDefaultTallImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "resolvedDefaultHeroImageGlob__i": "[${index}/${total}]:  Default hero image glob:",
        "resolvedDefaultHeroImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "resolvedDefaultLogoImageGlob__i": "[${index}/${total}]:  Default logo image glob:",
        "resolvedDefaultLogoImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "resolvedDefaultIconGlob__i": "[${index}/${total}]:  Default icon glob:",
        "resolvedDefaultIconGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "defaultImageResolved__i": "[${index}/${total}]:       Default image:\r\n[${index}/${total}]:                        ${image}",
        "defaultTallImageResolved__i": "[${index}/${total}]:       Default tall image:\r\n[${index}/${total}]:                        ${image}",
        "defaultHeroImageResolved__i": "[${index}/${total}]:       Default hero image:\r\n[${index}/${total}]:                        ${image}",
        "defaultLogoImageResolved__i": "[${index}/${total}]:       Default logo image:\r\n[${index}/${total}]:                        ${image}",
        "defaultIconResolved__i": "[${index}/${total}]:       Default icon:\r\n[${index}/${total}]:                        ${image}",
        "resolvedImageGlob__i": "[${index}/${total}]: Resolved image glob:",
        "resolvedImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "localImagesResolved__i": "[${index}/${total}]:     Resolved images:",
        "localImageInfo__i": "[${index}/${total}]:                        ${image}",
        "resolvedTallImageGlob__i": "[${index}/${total}]: Resolved tall image glob:",
        "resolvedTallImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "localTallImagesResolved__i": "[${index}/${total}]:     Resolved tall images:",
        "localTallImageInfo__i": "[${index}/${total}]:                        ${image}",
        "resolvedHeroImageGlob__i": "[${index}/${total}]: Resolved hero image glob:",
        "resolvedHeroImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "localHeroImagesResolved__i": "[${index}/${total}]:     Resolved hero images:",
        "localHeroImageInfo__i": "[${index}/${total}]:                        ${image}",
        "resolvedLogoImageGlob__i": "[${index}/${total}]: Resolved logo image glob:",
        "resolvedLogoImageGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "localLogoImagesResolved__i": "[${index}/${total}]:     Resolved logo images:",
        "localLogoImageInfo__i": "[${index}/${total}]:                        ${image}",
        "resolvedIconGlob__i": "[${index}/${total}]:  Resolved icon glob:",
        "resolvedIconGlobInfo__i": "[${index}/${total}]:                        ${glob}",
        "localIconsResolved__i": "[${index}/${total}]:      Resolved icons:",
        "localIconInfo__i": "[${index}/${total}]:                        ${icon}",
        "removedControllers__i": "Succesfully removed controllers for parser: ${configTitle}",
        "fetchedTemplates": "Fetched all controller templates"
      },
      "label": {
        "parserType": "Type d'analyseur",
        "configTitle": "Titre de configuration",
        "steamCategory": "Catégorie Steam",
        "executableModifier": "Executable modifier",
        "executableLocation": "Exécutable",
        "romDirectory": "Répertoire des ROMs",
        "steamDirectory": "Répertoire Steam",
        "startInDirectory": "\"Start In\" directory",
        "userAccounts": "User accounts",
        "titleFromVariable": "Title from custom variable",
        "titleModifier": "Title modifier",
        "fuzzyMatch": "Fuzzy matching",
        "executableArgs": "Command line arguments",
        "onlineImageQueries": "Online image query",
        "imagePool": "Image pool",
        "imageProviders": "Image providers",
        "defaultImage": "Image par défaut",
        "defaultTallImage": "Default tall image",
        "defaultHeroImage": "Default hero image",
        "defaultLogoImage": "Default logo image",
        "defaultIcon": "Default icon",
        "localImages": "Local images",
        "localTallImages": "Local tall images",
        "localHeroImages": "Local hero images",
        "localLogoImages": "Local logo images",
        "localIcons": "Local icons"
      },
      "placeholder": {
        "parserType": "Select parser...",
        "imageProviders": "Vide",
        "multiAPIPlaceholder": "Aucun filtre"
      },
      "text": {
        "skipWithMissingDataDir": "Ignorer les comptes trouvés avec des données manquantes",
        "useCredentials": "Use account credentials",
        "tryToMatchTitle": "Enable Title from Custom Variable",
        "skipFileIfVariableWasNotFound": "Skip file if variable was not found",
        "caseInsensitiveVariables": "Case-insensitive variables",
        "shortcut_passthrough": "Follow .lnk or .desktop to destination (Windows and Linux only)",
        "fuzzy_use": "Use fuzzy matching",
        "fuzzy_removeCharacters": "Aggressive matching",
        "fuzzy_removeBrackets": "Remove (...) and [...] brackets",
        "fuzzy_replaceDiacritic": "Replace diacritic characters",
        "appendArgsToExecutable": "Append arguments to executable",
        "disabled": "Disable current parser",
        "advanced": "Show advanced options",
        "noTitle": "No title!"
      }
    },
    "service": {
      "info": {
        "updatingConfigurations": "Updating user configurations with new fields"
      },
      "error": {
        "savingConfiguration": "Error encountered while saving user configurations!",
        "readingConfiguration": "Error encountered while reading user configurations!",
        "parserTypeMissing": "Cannot save without specifying parser type",
        "corruptedConfiguration__i": "One or more saved parser configurations are invalid!\r\nPermanent configuration saving is disabled until this issue is resolved.\r\nTry to manually fix errors yourself (file - ${file})\r\nor seek help on github or our official discord channel: ${error}",
        "fetcingTemplates": "Error encountered while fetching controllers templates!"
      },
      "validationErrors": {
        "parserType__md": "> Incorrect parser type!",
        "configTitle__md": "> Configuration title is required!",
        "parserId__md": "> Parser Id is missing, something is horribly wrong.",
        "parserInput": {
          "noInput": "No inputs are available!",
          "inputNotAvailable__i": "\"${name}\" input is not available!",
          "incorrectParser": "Incorrect parser!"
        },
        "romDir__md": "> ROMs directory is invalid!",
        "userAccounts__md": "> Steam parser requires `User Accounts` field",
        "steamDir__md": "> Steam directory is invalid!",
        "startInDir__md": "> \"Start In\" directory is invalid!",
        "executable__md": "> Executable is invalid!",
        "imagePool__md": "> Image pool must not be empty!",
        "defaultImage__md": "> Default image is an invalid path!",
        "titleModifier__md": "> Title modifier must not be empty!",
        "executableModifier__md": "> Executable modifier must not be empty!",
        "variableString__md": "> Uneven number of `${` and `}` pairs. Use `\\` to escape `${` or `}` if you want to use them as characters.",
        "imageProviders__md": "> Incorrect image providers type!",
        "unhandledValidationKey__md": "> Input's validation is unhandled",
        "genericDir__md": "> Directory is invalid",
        "genericPath__md": "> Path is invalid"
      },
      "text": {
        "noTitle": "No title!"
      }
    }
  },
  "fuzzyMatcher": {
    "info": {
      "downloading": "Title list for fuzzy matching will be downloaded.",
      "successfulDownload": "Download was successful. Saving list.",
      "checkingIfListIsUpToDate": "Checking if title list is up to date.",
      "listIsOutdated": "List is outdated. Title list for fuzzy matching will be downloaded.",
      "listIsUpToDate": "Title list is up to date.",
      "match__i": "Fuzzy title \"${fuzzyTitle}\" from \"${extractedTitle}\"",
      "equal__i": "Fuzzy compare: \"${a}\" == \"${b}\"",
      "notEqual__i": "Fuzzy compare: \"${a}\" != \"${b}\""
    },
    "error": {
      "fatalError": "Fatal error occurred while loading list for Fuzzy matcher. Fuzzy matching will be skipped.",
      "totalGamesIsUndefined": "Failed to get fuzzy list count. \"totalGames\" key is undefined."
    }
  },
  "fileParser": {
    "error": {
      "parserNotFound__i": "Parser \"${name}\" not found!",
      "tooManyFieldGlobs__md": "> Only one `$(...)$` set is allowed per input.",
      "parserIsRequired__md": "> First part of `$(...)$` must contain a valid **Glob** ir **Glob-regex** field.",
      "noWinSlashes__md": "> Windows directory character `\\` is not allowed! Use `/` instead."
    }
  },
  "imageProvider": {
    "error": {
      "webWorkerError__i": "Web worker error has occurred. ${error}",
      "unknownWebWorkerError": "Unknown web worker error has occurred. Error data: ${data}"
    }
  },
  "vdfManager": {
    "error": {
      "noUsersFound": "None of the provided steam directories contained any user directory.",
      "emptyDirectoryList": "Directory list is empty.",
      "couldNotPrepareToRead__i": "Could not find required steam files:\n ${error}",
      "couldNotBackupEntries__i": "Could not backup required steam files:\n ${error}",
      "couldNotReadEntries__i": "Could not read required steam files:\n ${error}",
      "couldNotWriteEntries": "Could not write entries to steam files:",
      "couldNotMergeEntries__i": "Could not merge entries:\n ${error}",
      "couldNotRemoveEntries__i": "Could not remove entries:\n ${error}"
    }
  },
  "vdfFile": {
    "error": {
      "readingVdf__i": "Failed to read from \"${filePath}\". ${error}",
      "writingVdf__i": "Failed to write to \"${filePath}\". ${error}",
      "corruptedVdf__i": "\"${filePath}\" est corrompu. ${error}",
      "creatingBackup__i": "Impossible de créer une backup pour \"${filePath}\". ${error}",
      "unsupportedMimeType__i": "Mime type (${type}) is unsupported (title - \"${title}\").",
      "imageError__i": "Error occurred while saving/downloading image for \"${title}\". Url: ${url}. ${error}"
    }
  },
  "helpers": {
    "error": {
      "noUserIdsInDir__i": "\"${steamDirectory}\" ne contient aucun identifiant d'utilisateur."
    }
  }
}
